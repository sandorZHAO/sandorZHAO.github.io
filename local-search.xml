<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>java数据类型</title>
    <link href="/2021/04/02/java/data_type/"/>
    <url>/2021/04/02/java/data_type/</url>
    
    <content type="html"><![CDATA[<p>java数据类型(基本数据类型,引用数据类型)?</p><span id="more"></span><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><p>分为两种<strong>基本数据类型</strong>，<strong>引用数据类型</strong></p><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><ol><li>基本数据类型：<ol><li>数值型<ol><li>整数类型<ol><li><a href="#byte">byte</a></li><li><a href="#short">short</a></li><li><a href="#int">int</a></li><li><a href="#long">long</a></li></ol></li><li>浮点类型<ol><li><a href="#float">float</a></li><li><a href="#double">double</a></li></ol></li></ol></li><li>字符型 <a href="#char">char</a></li><li>布尔型 <a href="#boolean">boolean</a></li></ol></li></ol><h3 id="byte"><a href="#byte" class="headerlink" title="byte"></a>byte</h3><ol><li>byte数据类型是8位有符号,以二进制补码表示的整数</li><li>最小值是 -128（-2^7）,最大值是 127（2^7-1）,默认值是 0；</li></ol><h3 id="short"><a href="#short" class="headerlink" title="short"></a>short</h3><ol><li>short 数据类型是 16 位、有符号的以二进制补码表示的整数</li><li>最小值是 -32768（-2^15）,最大值是 32767（2^15 - 1）,默认值是 0；</li></ol><h3 id="int"><a href="#int" class="headerlink" title="int"></a>int</h3><ol><li>int 数据类型是32位、有符号的以二进制补码表示的整数；</li><li>最小值是 -2,147,483,648（-2^31）,最大值是 2,147,483,647（2^31 - 1）,默认值是 0</li></ol><h3 id="long"><a href="#long" class="headerlink" title="long"></a>long</h3><ol><li>long 数据类型是 64 位、有符号的以二进制补码表示的整数；</li><li>最小值是 -9,223,372,036,854,775,808（-2^63）,最大值是 9,223,372,036,854,775,807（2^63 -1）,默认值是 0L；</li><li>“L”理论上不分大小写，但是若写成”l”容易与数字”1”混淆，不容易分辩。所以最好大写。</li></ol><h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><ol><li>float 数据类型是单精度、32位、符合IEEE 754标准的浮点数；</li><li>默认值是 0.0f；</li></ol><h3 id="double"><a href="#double" class="headerlink" title="double"></a>double</h3><ul><li>double 数据类型是双精度、64 位、符合IEEE 754标准的浮点数；</li><li>浮点数的默认类型为double类型；</li><li>默认值是 0.0d；</li></ul><h3 id="boolean"><a href="#boolean" class="headerlink" title="boolean"></a>boolean</h3><ul><li>boolean数据类型表示一位的信息；</li><li>只有两个取值：true 和 false；</li><li>这种类型只作为一种标志来记录 true/false 情况；</li><li>默认值是 false；</li></ul><h3 id="char"><a href="#char" class="headerlink" title="char"></a>char</h3><ul><li>char类型是一个单一的 16 位 Unicode 字符；</li><li>最小值是 \u0000（即为0）,最大值是 \uffff（即为65,535）；</li><li>char 数据类型可以储存任何字符；</li></ul><h2 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h2><ol><li>类</li><li>接口</li><li>数组</li><li>枚举类型</li><li>注解类型</li></ol><h2 id="基础数据类型与引用数据类型的区别"><a href="#基础数据类型与引用数据类型的区别" class="headerlink" title="基础数据类型与引用数据类型的区别"></a>基础数据类型与引用数据类型的区别</h2><p>基本数据类型在被创建时，在栈上给其划分一块内存，将数值直接存储在栈上。<br>引用数据类型在被创建时，首先要在栈上给其引用（句柄）分配一块内存，而对象的具体信息都存储在堆内存上，然后由栈上面的引用指向堆中对象的地址。</p>]]></content>
    
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java基础</title>
    <link href="/2021/04/01/java/java_base/"/>
    <url>/2021/04/01/java/java_base/</url>
    
    <content type="html"><![CDATA[<p>通过介绍Java的基础知识,对Java有一个大概了解（Java体系，Java特点，JDK 和 JRE，关键字，注释，运算符）?</p><span id="more"></span><h2 id="了解Java体系"><a href="#了解Java体系" class="headerlink" title="了解Java体系"></a>了解Java体系</h2><ul><li><p>JavaSE（J2SE）<br>  Java2 Platform Standard Edition，java平台标准版</p></li><li><p>JavaEE(J2EE)<br>  Java 2 Platform,Enterprise Edition，java平台企业版</p></li><li><p>JavaME(J2ME)<br>  Java 2 Platform Micro Edition，java平台微型版</p></li></ul><h2 id="Java-特点"><a href="#Java-特点" class="headerlink" title="Java 特点"></a>Java 特点</h2><ul><li>  简单性</li><li>  面向对象</li><li>  健壮性</li><li>  安全性</li><li>  网络技能(Network-Savvy)</li><li>  体系结构中立</li><li>  可移植性</li><li>  解释型</li><li>  高性能</li><li>  多线程</li><li>  动态性</li></ul><h2 id="JDK-和-JRE"><a href="#JDK-和-JRE" class="headerlink" title="JDK 和 JRE"></a>JDK 和 JRE</h2><p>JDK = Java程序设计语言 + Java虚拟机 + Java API类库</p><p>JRE = Java API 类库中的 Java SE API子集 + Java 虚拟机</p><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><h3 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h3><p>public、protected、private</p><h3 id="类方法和变量修饰符"><a href="#类方法和变量修饰符" class="headerlink" title="类方法和变量修饰符"></a>类方法和变量修饰符</h3><p>class、interface、abstract、implements、extends、new</p><p>static、final、super、this、native、strictfp、synchronized、transient、volatile</p><h3 id="程序控制语句"><a href="#程序控制语句" class="headerlink" title="程序控制语句"></a>程序控制语句</h3><p>if、else、while、for、switch、case、default、do、break、continue、return、instanceof</p><h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><p>catch、try、finally、throw、throws</p><h3 id="包相关"><a href="#包相关" class="headerlink" title="包相关"></a>包相关</h3><p>import、package</p><h3 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h3><p>byte、char、boolean、short、int、float、long、double、void、enum</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>assert、null、true、false</p><h3 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h3><p>goto、const</p><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><ol><li>大小写字母，数字，_或者$组成</li><li>数字不可以开头</li><li>不能使用关键字和保留字</li><li>区分大小写，长度无限制</li><li>标识符不能包含空格</li></ol><p>命名规范：</p><ol><li>包名：xxx.yyy.zzz</li><li>类名、接口名：Xxx</li><li>变量名、方法名：xxxYyyZzz</li><li>常量名：XXX_YYY_ZZZ</li></ol><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 单行注释</span><br></code></pre></td></tr></table></figure><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 多行注释</span><br><span class="hljs-comment"> */</span><br></code></pre></td></tr></table></figure><h3 id="文档注释"><a href="#文档注释" class="headerlink" title="文档注释"></a>文档注释</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@see</span> classname(fully-qualified-classname/fully-qualified-classname#method-name) 引用其他类</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@link</span> package.class#member label 使用label作为超链接的行内引用其他类</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@docRoot</span> 该标签产生到文档根目录的相对路径</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@inheritDoc</span> 从当前这个类的组直接的基类中继承相关文档到当前的文档注释中</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@author</span> 作者</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@version</span> 指定源文件的版本</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@since</span> 运行你指定程序代码最早使用的版本</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@param</span> 参数</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@return</span> 返回值</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@throws</span> 异常</span><br><span class="hljs-comment">  * <span class="hljs-doctag">@deprecated</span> 过时方法</span><br><span class="hljs-comment">  */</span><br></code></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>+，-，*，/，%，++，–</p><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>=，+=，-=，*=，/=，%=</p><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>==，!=，&gt;，&lt;，&gt;=，&lt;=，instanceof</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>!，&amp;&amp;，||</p><h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><p>&lt;&lt;，&gt;&gt;，&gt;&gt;&gt;，&amp;，|，^，~</p><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><p>?:</p>]]></content>
    
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>知识目录</title>
    <link href="/2021/04/01/KnowledgeList/"/>
    <url>/2021/04/01/KnowledgeList/</url>
    
    <content type="html"><![CDATA[<h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><a class="btn" href="/2021/04/01/java/java_base/"  title="java基础" target="_blank">java基础</a><p>包括：Java体系，Java特点，JDK 和 JRE，关键字，注释，运算符</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><a class="btn" href="/2021/04/02/java/data_type/"  title="数据类型" target="_blank">数据类型</a><p>包括：基础数据类型,引用数据类型</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
